<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>maven on Blog</title>
    <link>https://miasnikovas.lt/tags/maven/</link>
    <description>Recent content in maven on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Andrius Miasnikovas</copyright>
    <lastBuildDate>Fri, 26 Feb 2010 00:00:00 +0000</lastBuildDate><atom:link href="https://miasnikovas.lt/tags/maven/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Maven3 alpha and CLI plugin for Maven2</title>
      <link>https://miasnikovas.lt/2010/02/maven3-alpha-and-cli-plugin-for-maven2/</link>
      <pubDate>Fri, 26 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://miasnikovas.lt/2010/02/maven3-alpha-and-cli-plugin-for-maven2/</guid>
      <description>Today I tried out the new Maven-3.0-alpha-6 on a multi-module project which uses profiles inside POM files and profiles.xml file. The first thing I noticed that Maven3 still uses the .m2 directory for local repository. I kind of thought they would change that, but I guess this is good for backward compatibility. Another thing that immediately strikes you is that Maven became more strict. I was getting warning messages because the POM file wasn&amp;rsquo;t living up to Maven&amp;rsquo;s standards of well defined build script.</description>
    </item>
    
    <item>
      <title>Maven profiles.xml issue (MNG-3933)</title>
      <link>https://miasnikovas.lt/2010/02/maven-profiles-xml-issue-mng-3933/</link>
      <pubDate>Thu, 25 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://miasnikovas.lt/2010/02/maven-profiles-xml-issue-mng-3933/</guid>
      <description>If you&amp;rsquo;re using a profiles.xml file to store your profiles and want to migrate from Maven 2.0.x to Maven 2.1.x or later chances are you&amp;rsquo;ll run into a build failure. In my case the error message was “Reason: Failed to activate local (project-level) build profiles: Cannot parse profiles.xml resource from directory: …”
The root cause of this from the stack trace might look like this:
Caused by: org.codehaus.plexus.util.xml.pull.XmlPullParserException: Expected root element &amp;#39;profilesXml&amp;#39; but found &amp;#39;profiles&amp;#39; (position: START_TAG seen &amp;lt;?</description>
    </item>
    
    <item>
      <title>Maven command-line tips</title>
      <link>https://miasnikovas.lt/2010/02/maven-command-line-tips/</link>
      <pubDate>Wed, 24 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://miasnikovas.lt/2010/02/maven-command-line-tips/</guid>
      <description>In an ever-growing sea of parameters that one needs to memorize for tens or even hundreds of command-line programs I decided to keep a list of some of the more useful and frequently used Maven parameters in case I forget anything.
This should be run from a parent POM&amp;rsquo;s directory. It lets you view the POM file that would be in effect if you were building the project. The result is a composite POM containing all your child POMs that you defined as modules in the parent POM.</description>
    </item>
    
    <item>
      <title>Using maven</title>
      <link>https://miasnikovas.lt/2008/05/using-maven/</link>
      <pubDate>Thu, 08 May 2008 00:00:00 +0000</pubDate>
      
      <guid>https://miasnikovas.lt/2008/05/using-maven/</guid>
      <description>Maven is an awesome build tool for JAVA, but it has some long parameter names that I don&amp;rsquo;t like to remember, so I put my often used tasks of maven in batch files.
install.bat
mvn install:install-file -Dfile=%1 -DgroupId=%2 -DartifactId=%3 -Dversion=%4 -Dpackaging=pom -DgeneratePom=true This installs the specified .jar file in the local repository located in
C:\Documents and Settings\*User*\.m2\repository where *User* is your username. Four arguments are required: jar_file, group, artifact and version.</description>
    </item>
    
  </channel>
</rss>
